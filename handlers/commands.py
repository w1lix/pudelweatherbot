from aiogram import Router, html, F
from aiogram.filters import Text, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message

from keyboards.reply import reply_keyboard_main, reply_keyboard_send_location

router = Router()


class Form(StatesGroup):
    request_city_now = State()
    request_city_tomorrow = State()


# —Å—Ç–∞—Ä—Ç :D
@router.message(Command('start'))
async def cmd_start(m: Message, state: FSMContext) -> None:
    await state.clear()

    await m.answer(f"üëª –ø—Ä–∏–≤–µ—Ç, {html.bold(html.quote(m.from_user.first_name))}!"
                   f" üëª \nüå§Ô∏è —è <b>–ø–æ–≥–æ–¥–Ω—ã–π</b> –±–æ—Ç –æ—Ç <b>@takilow</b>\n\n"
                   f"—è –º–æ–≥—É —É–∑–Ω–∞—Ç—å <b>–ø–æ–≥–æ–¥—É</b> –Ω–∞ <b>–∑–∞–≤—Ç—Ä–∞</b>, <b>—Å–µ–≥–æ–¥–Ω—è</b>\n"
                   f"<b>–∏ –¥–∞–∂–µ –Ω–∞ 8 –¥–Ω–µ–π!</b> üòé\n\n"
                   f"‚ú® <b>–∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π</b>\n\n"
                   f"<b>—Ç–∞–∫–∂–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, "
                   f"—á—Ç–æ–±—ã —Ç–µ–±–µ –Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Å–≤–æ–π –≥–æ—Ä–æ–¥ ü§î</b>\n\n"
                   f"üíó <b>–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</b>", reply_markup=reply_keyboard_main())


# —É—Å—Ç–∞–Ω–æ–≤–∫–∞ state –¥–ª—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ now
@router.message(F.text == "üèô —Ç–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞")
async def request_the_city_now(m: Message, state: FSMContext) -> None:
    await state.clear()

    await m.reply("<b>üó∫ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é</b> –∏–ª–∏ \n"
                  "<b>ü¶ã –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥</b>: ", reply_markup=reply_keyboard_send_location())

    await state.set_state(Form.request_city_now)


# —É—Å—Ç–∞–Ω–æ–≤–∫–∞ state –¥–ª—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ tomorrow
@router.message(F.text == 'üåÜ –ø–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')
async def request_the_city_tomorrow(m: Message, state: FSMContext) -> None:
    await state.clear()

    await m.reply("<b>üó∫ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é</b> –∏–ª–∏ \n"
                  "<b>ü¶ã –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥</b>: ", reply_markup=reply_keyboard_send_location())

    await state.set_state(Form.request_city_tomorrow)


@router.message(Text('üåå –ø–æ–≥–æ–¥–∞ –Ω–∞ 8 –¥–Ω–µ–π'))
async def cmd_start(m: Message, state: FSMContext):
    await state.clear()
    await m.answer("–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ :( ")


@router.message(Command('negr'))
async def negr(m: Message) -> None:
    await m.answer("negr", reply_markup=None)
